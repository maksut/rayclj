(ns rayclj.raylib.functions
  (:require [rayclj.arena :as rarena]
            [rayclj.raylib.enums :as renums]
            [rayclj.raylib.structs :as rstructs]
            [rayclj.arrays :refer [string]])
  (:import [rayclj.raylib raylib_h]
           [java.lang.foreign Arena]))

(set! *warn-on-reflection* true)

;;
;; Utility Functions
;;

(defmacro with-drawing [& body]
  `(binding [rarena/*current-arena* (rarena/confined-arena)]
     (try
       (begin-drawing)
       ~@body
       (end-drawing)
       (finally
         (.close rarena/*current-arena*)))))

;;
;; Raylib Functions
;;

