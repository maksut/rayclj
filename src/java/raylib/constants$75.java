// Generated by jextract

package raylib;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
final class constants$75 {

    // Suppresses default constructor, ensuring non-instantiability.
    private constants$75() {}
    static final MethodHandle const$0 = RuntimeHelper.downcallHandle(
        "DrawCircleLinesV",
        constants$74.const$3
    );
    static final FunctionDescriptor const$1 = FunctionDescriptor.ofVoid(
        JAVA_INT,
        JAVA_INT,
        JAVA_FLOAT,
        JAVA_FLOAT,
        MemoryLayout.structLayout(
            JAVA_BYTE.withName("r"),
            JAVA_BYTE.withName("g"),
            JAVA_BYTE.withName("b"),
            JAVA_BYTE.withName("a")
        ).withName("Color")
    );
    static final MethodHandle const$2 = RuntimeHelper.downcallHandle(
        "DrawEllipse",
        constants$75.const$1
    );
    static final MethodHandle const$3 = RuntimeHelper.downcallHandle(
        "DrawEllipseLines",
        constants$75.const$1
    );
    static final FunctionDescriptor const$4 = FunctionDescriptor.ofVoid(
        MemoryLayout.structLayout(
            JAVA_FLOAT.withName("x"),
            JAVA_FLOAT.withName("y")
        ).withName("Vector2"),
        JAVA_FLOAT,
        JAVA_FLOAT,
        JAVA_FLOAT,
        JAVA_FLOAT,
        JAVA_INT,
        MemoryLayout.structLayout(
            JAVA_BYTE.withName("r"),
            JAVA_BYTE.withName("g"),
            JAVA_BYTE.withName("b"),
            JAVA_BYTE.withName("a")
        ).withName("Color")
    );
    static final MethodHandle const$5 = RuntimeHelper.downcallHandle(
        "DrawRing",
        constants$75.const$4
    );
}


