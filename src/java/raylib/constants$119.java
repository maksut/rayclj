// Generated by jextract

package raylib;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
final class constants$119 {

    // Suppresses default constructor, ensuring non-instantiability.
    private constants$119() {}
    static final MethodHandle const$0 = RuntimeHelper.downcallHandle(
        "UnloadFontData",
        constants$33.const$2
    );
    static final FunctionDescriptor const$1 = FunctionDescriptor.ofVoid(
        MemoryLayout.structLayout(
            JAVA_INT.withName("baseSize"),
            JAVA_INT.withName("glyphCount"),
            JAVA_INT.withName("glyphPadding"),
            MemoryLayout.structLayout(
                JAVA_INT.withName("id"),
                JAVA_INT.withName("width"),
                JAVA_INT.withName("height"),
                JAVA_INT.withName("mipmaps"),
                JAVA_INT.withName("format")
            ).withName("texture"),
            RuntimeHelper.POINTER.withName("recs"),
            RuntimeHelper.POINTER.withName("glyphs")
        ).withName("Font")
    );
    static final MethodHandle const$2 = RuntimeHelper.downcallHandle(
        "UnloadFont",
        constants$119.const$1
    );
    static final FunctionDescriptor const$3 = FunctionDescriptor.of(JAVA_BOOLEAN,
        MemoryLayout.structLayout(
            JAVA_INT.withName("baseSize"),
            JAVA_INT.withName("glyphCount"),
            JAVA_INT.withName("glyphPadding"),
            MemoryLayout.structLayout(
                JAVA_INT.withName("id"),
                JAVA_INT.withName("width"),
                JAVA_INT.withName("height"),
                JAVA_INT.withName("mipmaps"),
                JAVA_INT.withName("format")
            ).withName("texture"),
            RuntimeHelper.POINTER.withName("recs"),
            RuntimeHelper.POINTER.withName("glyphs")
        ).withName("Font"),
        RuntimeHelper.POINTER
    );
    static final MethodHandle const$4 = RuntimeHelper.downcallHandle(
        "ExportFontAsCode",
        constants$119.const$3
    );
    static final MethodHandle const$5 = RuntimeHelper.downcallHandle(
        "DrawFPS",
        constants$34.const$0
    );
}


