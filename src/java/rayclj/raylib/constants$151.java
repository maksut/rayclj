// Generated by jextract

package rayclj.raylib;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
final class constants$151 {

    // Suppresses default constructor, ensuring non-instantiability.
    private constants$151() {}
    static final FunctionDescriptor const$0 = FunctionDescriptor.ofVoid(
        MemoryLayout.structLayout(
            JAVA_INT.withName("frameCount"),
            JAVA_INT.withName("sampleRate"),
            JAVA_INT.withName("sampleSize"),
            JAVA_INT.withName("channels"),
            RuntimeHelper.POINTER.withName("data")
        ).withName("Wave")
    );
    static final MethodHandle const$1 = RuntimeHelper.downcallHandle(
        "UnloadWave",
        constants$151.const$0
    );
    static final FunctionDescriptor const$2 = FunctionDescriptor.ofVoid(
        MemoryLayout.structLayout(
            MemoryLayout.structLayout(
                RuntimeHelper.POINTER.withName("buffer"),
                RuntimeHelper.POINTER.withName("processor"),
                JAVA_INT.withName("sampleRate"),
                JAVA_INT.withName("sampleSize"),
                JAVA_INT.withName("channels"),
                MemoryLayout.paddingLayout(4)
            ).withName("stream"),
            JAVA_INT.withName("frameCount"),
            MemoryLayout.paddingLayout(4)
        ).withName("Sound")
    );
    static final MethodHandle const$3 = RuntimeHelper.downcallHandle(
        "UnloadSound",
        constants$151.const$2
    );
    static final MethodHandle const$4 = RuntimeHelper.downcallHandle(
        "UnloadSoundAlias",
        constants$151.const$2
    );
    static final FunctionDescriptor const$5 = FunctionDescriptor.of(JAVA_BOOLEAN,
        MemoryLayout.structLayout(
            JAVA_INT.withName("frameCount"),
            JAVA_INT.withName("sampleRate"),
            JAVA_INT.withName("sampleSize"),
            JAVA_INT.withName("channels"),
            RuntimeHelper.POINTER.withName("data")
        ).withName("Wave"),
        RuntimeHelper.POINTER
    );
    static final MethodHandle const$6 = RuntimeHelper.downcallHandle(
        "ExportWave",
        constants$151.const$5
    );
}


