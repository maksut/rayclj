// Generated by jextract

package rayclj.raylib;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
final class constants$45 {

    // Suppresses default constructor, ensuring non-instantiability.
    private constants$45() {}
    static final FunctionDescriptor const$0 = FunctionDescriptor.of(MemoryLayout.structLayout(
        JAVA_INT.withName("id"),
        MemoryLayout.paddingLayout(4),
        RuntimeHelper.POINTER.withName("locs")
    ).withName("Shader"),
        RuntimeHelper.POINTER,
        RuntimeHelper.POINTER
    );
    static final MethodHandle const$1 = RuntimeHelper.downcallHandle(
        "LoadShader",
        constants$45.const$0
    );
    static final MethodHandle const$2 = RuntimeHelper.downcallHandle(
        "LoadShaderFromMemory",
        constants$45.const$0
    );
    static final FunctionDescriptor const$3 = FunctionDescriptor.of(JAVA_BOOLEAN,
        MemoryLayout.structLayout(
            JAVA_INT.withName("id"),
            MemoryLayout.paddingLayout(4),
            RuntimeHelper.POINTER.withName("locs")
        ).withName("Shader")
    );
    static final MethodHandle const$4 = RuntimeHelper.downcallHandle(
        "IsShaderReady",
        constants$45.const$3
    );
    static final FunctionDescriptor const$5 = FunctionDescriptor.of(JAVA_INT,
        MemoryLayout.structLayout(
            JAVA_INT.withName("id"),
            MemoryLayout.paddingLayout(4),
            RuntimeHelper.POINTER.withName("locs")
        ).withName("Shader"),
        RuntimeHelper.POINTER
    );
    static final MethodHandle const$6 = RuntimeHelper.downcallHandle(
        "GetShaderLocation",
        constants$45.const$5
    );
}


