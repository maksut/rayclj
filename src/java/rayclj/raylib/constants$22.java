// Generated by jextract

package rayclj.raylib;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
final class constants$22 {

    // Suppresses default constructor, ensuring non-instantiability.
    private constants$22() {}
    static final VarHandle const$0 = constants$21.const$1.varHandle(MemoryLayout.PathElement.groupElement("channels"));
    static final StructLayout const$1 = MemoryLayout.structLayout(
        MemoryLayout.structLayout(
            RuntimeHelper.POINTER.withName("buffer"),
            RuntimeHelper.POINTER.withName("processor"),
            JAVA_INT.withName("sampleRate"),
            JAVA_INT.withName("sampleSize"),
            JAVA_INT.withName("channels"),
            MemoryLayout.paddingLayout(4)
        ).withName("stream"),
        JAVA_INT.withName("frameCount"),
        MemoryLayout.paddingLayout(4)
    ).withName("Sound");
    static final VarHandle const$2 = constants$22.const$1.varHandle(MemoryLayout.PathElement.groupElement("frameCount"));
    static final StructLayout const$3 = MemoryLayout.structLayout(
        MemoryLayout.structLayout(
            RuntimeHelper.POINTER.withName("buffer"),
            RuntimeHelper.POINTER.withName("processor"),
            JAVA_INT.withName("sampleRate"),
            JAVA_INT.withName("sampleSize"),
            JAVA_INT.withName("channels"),
            MemoryLayout.paddingLayout(4)
        ).withName("stream"),
        JAVA_INT.withName("frameCount"),
        JAVA_BOOLEAN.withName("looping"),
        MemoryLayout.paddingLayout(3),
        JAVA_INT.withName("ctxType"),
        MemoryLayout.paddingLayout(4),
        RuntimeHelper.POINTER.withName("ctxData")
    ).withName("Music");
    static final VarHandle const$4 = constants$22.const$3.varHandle(MemoryLayout.PathElement.groupElement("frameCount"));
    static final VarHandle const$5 = constants$22.const$3.varHandle(MemoryLayout.PathElement.groupElement("looping"));
}


